@model IEnumerable<ProductViewModel> 
@*  We declare with @model the collection that is in the controller in the action so it can be used here is the View. *@
@{
	ViewBag.Title = "All Products";

}
<div class="container-fluid">
	<div class row>
		
		<form asp-controller="Product" asp-action="My-Products" method="get">
			
			<div class="input-group">
				<div class="form-outline">
					<input type="search" id="keyword" name="keyword" class="form-control" />
					<label class="form-label" for="keyword"></label>
					<button class="btn btn-primary" type="submit"><i class="fa fa-search fa-fw"></i> Search</button>
				</div>
				
				
			</div>
		</form>
	</div>
	<div class row>
		
		<div class="card" style="width: 18rem;">
	
			<div class="card-header">@ViewBag.Title</div>
			<ul class="list-group list-group-flush">
				@foreach (var product in Model)
				{
					<li class="list-group-item">
						@product.Id: @product.Name - @product.Price lv. 
					</li>
				}

			</ul>

		</div>
		<a class="btn btn-info" type="button" asp-controller="Product" asp-action="AllAsTextFile"> Download Products</a>
	</div>

</div>

